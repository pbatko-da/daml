.. Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
.. SPDX-License-Identifier: Apache-2.0

.. _module-da-text-96575:

Module DA.Text
==============

Functions for working with Text\.

Functions
---------

.. _function-da-text-explode-42691:

`explode <function-da-text-explode-42691_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\]

.. _function-da-text-implode-5420:

`implode <function-da-text-implode-5420_>`_
  \: \[:ref:`Text <type-ghc-types-text-57703>`\] \-\> :ref:`Text <type-ghc-types-text-57703>`

.. _function-da-text-isempty-22539:

`isEmpty <function-da-text-isempty-22539_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  Test for emptiness\.

.. _function-da-text-length-19353:

`length <function-da-text-length-19353_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Int <type-ghc-types-int-68728>`
  
  Compute the number of symbols in the text\.

.. _function-da-text-trim-13543:

`trim <function-da-text-trim-13543_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Remove spaces from either side of the given text\.

.. _function-da-text-replace-26716:

`replace <function-da-text-replace-26716_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Replace a subsequence everywhere it occurs\. The first argument
  must not be empty\.

.. _function-da-text-lines-75019:

`lines <function-da-text-lines-75019_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\]
  
  Breaks a ``Text`` value up into a list of ``Text``'s at newline
  symbols\. The resulting texts do not contain newline symbols\.

.. _function-da-text-unlines-18642:

`unlines <function-da-text-unlines-18642_>`_
  \: \[:ref:`Text <type-ghc-types-text-57703>`\] \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Joins lines, after appending a terminating newline to each\.

.. _function-da-text-words-85005:

`words <function-da-text-words-85005_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\]
  
  Breaks a 'Text' up into a list of words, delimited by symbols
  representing white space\.

.. _function-da-text-unwords-64192:

`unwords <function-da-text-unwords-64192_>`_
  \: \[:ref:`Text <type-ghc-types-text-57703>`\] \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Joins words using single space symbols\.

.. _function-da-text-linesby-97578:

`linesBy <function-da-text-linesby-97578_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\]
  
  A variant of ``lines`` with a custom test\. In particular, if there
  is a trailing separator it will be discarded\.

.. _function-da-text-wordsby-13804:

`wordsBy <function-da-text-wordsby-13804_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\]
  
  A variant of ``words`` with a custom test\. In particular, adjacent
  separators are discarded, as are leading or trailing separators\.

.. _function-da-text-intercalate-3462:

`intercalate <function-da-text-intercalate-3462_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\] \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  ``intercalate`` inserts the text argument ``t`` in between the items
  in ``ts`` and concatenates the result\.

.. _function-da-text-dropprefix-25814:

`dropPrefix <function-da-text-dropprefix-25814_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  ``dropPrefix`` drops the given prefix from the argument\. It returns
  the original text if the text doesn't start with the given prefix\.

.. _function-da-text-dropsuffix-58469:

`dropSuffix <function-da-text-dropsuffix-58469_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Drops the given suffix from the argument\. It returns the original
  text if the text doesn't end with the given suffix\. Examples\:
  
  .. code-block:: daml
  
      dropSuffix "!" "Hello World!"  == "Hello World"
      dropSuffix "!" "Hello World!!" == "Hello World!"
      dropSuffix "!" "Hello World."  == "Hello World."

.. _function-da-text-stripsuffix-1281:

`stripSuffix <function-da-text-stripsuffix-1281_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Optional <type-da-internal-prelude-optional-79838>` :ref:`Text <type-ghc-types-text-57703>`
  
  Return the prefix of the second text if its suffix matches the
  entire first text\. Examples\:
  
  .. code-block:: daml
  
      stripSuffix "bar" "foobar" == Some "foo"
      stripSuffix ""    "baz"    == Some "baz"
      stripSuffix "foo" "quux"   == None

.. _function-da-text-stripprefix-99418:

`stripPrefix <function-da-text-stripprefix-99418_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Optional <type-da-internal-prelude-optional-79838>` :ref:`Text <type-ghc-types-text-57703>`
  
  The ``stripPrefix`` function drops the given prefix from the
  argument text\. It returns ``None`` if the text did not start with
  the prefix\.

.. _function-da-text-isprefixof-28706:

`isPrefixOf <function-da-text-isprefixof-28706_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  The ``isPrefixOf`` function takes two text arguments and returns
  ``True`` if and only if the first is a prefix of the second\.

.. _function-da-text-issuffixof-41317:

`isSuffixOf <function-da-text-issuffixof-41317_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  The ``isSuffixOf`` function takes two text arguments and returns
  ``True`` if and only if the first is a suffix of the second\.

.. _function-da-text-isinfixof-60359:

`isInfixOf <function-da-text-isinfixof-60359_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  The ``isInfixOf`` function takes two text arguments and returns
  ``True`` if and only if the first is contained, wholly and intact,
  anywhere within the second\.

.. _function-da-text-takewhile-24422:

`takeWhile <function-da-text-takewhile-24422_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  The function ``takeWhile``, applied to a predicate ``p`` and a text,
  returns the longest prefix (possibly empty) of symbols that satisfy
  ``p``\.

.. _function-da-text-takewhileend-74428:

`takeWhileEnd <function-da-text-takewhileend-74428_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  The function 'takeWhileEnd', applied to a predicate ``p`` and a
  'Text', returns the longest suffix (possibly empty) of elements
  that satisfy ``p``\.

.. _function-da-text-dropwhile-73160:

`dropWhile <function-da-text-dropwhile-73160_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  ``dropWhile p t`` returns the suffix remaining after ``takeWhile p t``\.

.. _function-da-text-dropwhileend-95150:

`dropWhileEnd <function-da-text-dropwhileend-95150_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  ``dropWhileEnd p t`` returns the prefix remaining after dropping
  symbols that satisfy the predicate ``p`` from the end of ``t``\.

.. _function-da-text-spliton-79915:

`splitOn <function-da-text-spliton-79915_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Text <type-ghc-types-text-57703>`\]
  
  Break a text into pieces separated by the first text argument
  (which cannot be empty), consuming the delimiter\.

.. _function-da-text-splitat-74707:

`splitAt <function-da-text-splitat-74707_>`_
  \: :ref:`Int <type-ghc-types-int-68728>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> (:ref:`Text <type-ghc-types-text-57703>`, :ref:`Text <type-ghc-types-text-57703>`)
  
  Split a text before a given position so that for ``0 <= n <= length t``,
  ``length (fst (splitAt n t)) == n``\.

.. _function-da-text-take-66886:

`take <function-da-text-take-66886_>`_
  \: :ref:`Int <type-ghc-types-int-68728>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  ``take n``, applied to a text ``t``, returns the prefix of ``t`` of
  length ``n``, or ``t`` itself if ``n`` is greater than the length of ``t``\.

.. _function-da-text-drop-29448:

`drop <function-da-text-drop-29448_>`_
  \: :ref:`Int <type-ghc-types-int-68728>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  ``drop n``, applied to a text ``t``, returns the suffix of ``t`` after
  the first ``n`` characters, or the empty ``Text`` if ``n`` is greater
  than the length of ``t``\.

.. _function-da-text-substring-63651:

`substring <function-da-text-substring-63651_>`_
  \: :ref:`Int <type-ghc-types-int-68728>` \-\> :ref:`Int <type-ghc-types-int-68728>` \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Compute the sequence of symbols of length ``l`` in the argument
  text starting at ``s``\.

.. _function-da-text-ispred-61472:

`isPred <function-da-text-ispred-61472_>`_
  \: (:ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`) \-\> :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isPred f t`` returns ``True`` if ``t`` is not empty and ``f`` is ``True``
  for all symbols in ``t``\.

.. _function-da-text-isspace-78886:

`isSpace <function-da-text-isspace-78886_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isSpace t`` is ``True`` if ``t`` is not empty and consists only of
  spaces\.

.. _function-da-text-isnewline-28742:

`isNewLine <function-da-text-isnewline-28742_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isSpace t`` is ``True`` if ``t`` is not empty and consists only of
  newlines\.

.. _function-da-text-isupper-4704:

`isUpper <function-da-text-isupper-4704_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isUpper t`` is ``True`` if ``t`` is not empty and consists only of
  uppercase symbols\.

.. _function-da-text-islower-72135:

`isLower <function-da-text-islower-72135_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isLower t`` is ``True`` if ``t`` is not empty and consists only of
  lowercase symbols\.

.. _function-da-text-isdigit-49059:

`isDigit <function-da-text-isdigit-49059_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isDigit t`` is ``True`` if ``t`` is not empty and consists only of
  digit symbols\.

.. _function-da-text-isalpha-75716:

`isAlpha <function-da-text-isalpha-75716_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isAlpha t`` is ``True`` if ``t`` is not empty and consists only of
  alphabet symbols\.

.. _function-da-text-isalphanum-86553:

`isAlphaNum <function-da-text-isalphanum-86553_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Bool <type-ghc-types-bool-8654>`
  
  ``isAlphaNum t`` is ``True`` if ``t`` is not empty and consists only of
  alphanumeric symbols\.

.. _function-da-text-parseint-33239:

`parseInt <function-da-text-parseint-33239_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Optional <type-da-internal-prelude-optional-79838>` :ref:`Int <type-ghc-types-int-68728>`
  
  Attempt to parse an ``Int`` value from a given ``Text``\.

.. _function-da-text-parsenumeric-713:

`parseNumeric <function-da-text-parsenumeric-713_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Optional <type-da-internal-prelude-optional-79838>` (:ref:`Numeric <type-ghc-types-numeric-34702>` n)
  
  Attempt to parse a ``Numeric`` value from a given ``Text``\.
  To get ``Some`` value, the text must follow the regex
  ``(-|\+)?[0-9]+(\.[0-9]+)?``
  In particular, the shorthands ``".12"`` and ``"12."`` do not work,
  but the value can be prefixed with ``+``\.
  Leading and trailing zeros are fine, however spaces are not\.
  Examples\:
  
  .. code-block:: daml
  
      parseNumeric "3.14" == Some 3.14
      parseNumeric "+12.0" == Some 12

.. _function-da-text-parsedecimal-64517:

`parseDecimal <function-da-text-parsedecimal-64517_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Optional <type-da-internal-prelude-optional-79838>` :ref:`Decimal <type-ghc-types-decimal-54602>`
  
  Attempt to parse a ``Decimal`` value from a given ``Text``\.
  To get ``Some`` value, the text must follow the regex
  ``(-|\+)?[0-9]+(\.[0-9]+)?``
  In particular, the shorthands ``".12"`` and ``"12."`` do not work,
  but the value can be prefixed with ``+``\.
  Leading and trailing zeros are fine, however spaces are not\.
  Examples\:
  
  .. code-block:: daml
  
      parseDecimal "3.14" == Some 3.14
      parseDecimal "+12.0" == Some 12

.. _function-da-text-sha256-37092:

`sha256 <function-da-text-sha256-37092_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Computes the SHA256 hash of the UTF8 bytes of the ``Text``, and returns it in its hex\-encoded
  form\. The hex encoding uses lowercase letters\.
  
  This function will crash at runtime if you compile Daml to Daml\-LF \< 1\.2\.

.. _function-da-text-reverse-41526:

`reverse <function-da-text-reverse-41526_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Reverse some ``Text``\.
  
  .. code-block:: daml
  
      reverse "DAML" == "LMAD"

.. _function-da-text-tocodepoints-85426:

`toCodePoints <function-da-text-tocodepoints-85426_>`_
  \: :ref:`Text <type-ghc-types-text-57703>` \-\> \[:ref:`Int <type-ghc-types-int-68728>`\]
  
  Convert a ``Text`` into a sequence of unicode code points\.

.. _function-da-text-fromcodepoints-89871:

`fromCodePoints <function-da-text-fromcodepoints-89871_>`_
  \: \[:ref:`Int <type-ghc-types-int-68728>`\] \-\> :ref:`Text <type-ghc-types-text-57703>`
  
  Convert a sequence of unicode code points into a ``Text``\. Raises an
  exception if any of the code points is invalid\.
